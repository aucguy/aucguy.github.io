"use strict";base.registerModule("level",function(e){var n=base.importModule("engine"),i=(base.importModule("entity"),base.importModule("util"));e.init=function(){base.importModule("data")},e.HEX_CHARS="0123456789ABCDEF";var h={constructor:base.abstractMethod,getTile:base.abstractMethod,tiles:base.abstractField,tileSize:base.abstractField};e.tileProvider=h,e.setTileProvider=function(t){e.tileProvider=t,h=t},base.importModule("data");var t=base.extend(Object,"Grid",{constructor:base.abstractMethod,getTile:base.abstractMethod,setTile:base.abstractMethod});e.Grid=t;var s=base.extend([n.Sprite,t],"Chunk",{constructor:function(){this.constructor$Sprite(),this.tiles=null,this.image=null,this.spawners=[],this.entityTypes={}},getTile:function(t,e){return h.getTile(this.tiles[this.getIndex(t,e)])},setTile:function(t,e,i){this.tiles[this.getIndex(e,i)]=t.id},getIndex:function(t,e){return e*this.width+t},bakeImage:function(){var t=h.tileSize;this.image=n.makeCanvas(t*this.width,t*this.height);for(var e=this.image.getContext("2d"),i=0,s=0;s<this.height;s++)for(var r=0;r<this.width;r++){var a=h.getTile(this.tiles[i++]);null!==a.image&&e.drawImage(a.image,r*t,s*t)}},render:n.listener(n.EventRender.ID,function(t){t.context.drawImage(this.image,0,0)}),read:function(t){this.width=t.width,this.height=t.height;for(var e=0;e<t.layers.length;e++){var i=t.layers[e];if("tilelayer"==i.type)this.readTiles(i);else if("objectgroup"==i.type)for(var s=0;s<i.objects.length;s++)this.spawners.push(i.objects[s])}},readTiles:function(t){this.tiles=new Uint8Array(this.width*this.height);for(var e=0,i=0;i<this.height;i++)for(var s=0;s<this.width;s++){var r=t.data[e];this.tiles[e++]=r}this.bakeImage()},hasEntities:function(){return!0},copyFrom:function(t){this.width=t.width,this.height=t.height,this.tiles=t.tiles,this.spawners=t.spawners,this.image=t.image}});s.prototype.compile(),e.Chunk=s;var r=base.extend(Object,"Tile",{constructor:function(t,e){this.id=t,this.image=e},getBox:function(t,e){return new i.Rect(t,e,1,1)},isSolid:function(){return!0}});e.Tile=r,e.PassableTile=base.extend(r,"PassableTile",{constructor:function(t,e){this.constructor$Tile(t,e)},getBox:function(){return null},isSolid:function(){return!1}})});