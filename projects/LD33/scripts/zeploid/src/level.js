base.registerModule("level",function(t){var e=base.importModule("engine"),i=(base.importModule("entity"),base.importModule("util")),s=null;t.init=function(){s=base.importModule("data")};const r="0123456789ABCDEF";t.HEX_CHARS=r;var n={constructor:base.abstractMethod,getTile:base.abstractMethod,tiles:base.abstractField,tileSize:base.abstractField};t.tileProvider=n,t.setTileProvider=function(e){t.tileProvider=e,n=e},s=base.importModule("data"),Grid=base.extend(Object,"Grid",{constructor:base.abstractMethod,getTile:base.abstractMethod,setTile:base.abstractMethod}),t.Grid=Grid,Chunk=base.extend([e.Sprite,Grid],"Chunk",{constructor:function(){this.constructor$Sprite(),this.tiles=null,this.image=null,this.spawners=[],this.entityTypes={}},getTile:function(t,e){return n.getTile(this.tiles[this.getIndex(t,e)])},setTile:function(t,e,i){this.tiles[this.getIndex(e,i)]=t.id},getIndex:function(t,e){return e*this.width+t},bakeImage:function(){var t=n.tileSize;this.image=e.makeCanvas(t*this.width,t*this.height);for(var i=this.image.getContext("2d"),s=0,r=0;r<this.height;r++)for(var a=0;a<this.width;a++){var h=n.getTile(this.tiles[s++]);null!==h.image&&i.drawImage(h.image,a*t,r*t)}},render:e.listener(e.EventRender.ID,function(t){t.context.drawImage(this.image,0,0)}),read:function(t){this.width=t.width,this.height=t.height;for(var e=0;e<t.layers.length;e++){var i=t.layers[e];if("tilelayer"==i.type)this.readTiles(i);else if("objectgroup"==i.type)for(var s=0;s<i.objects.length;s++)this.spawners.push(i.objects[s])}},readTiles:function(t){this.tiles=new Uint8Array(this.width*this.height);for(var e=0,i=0;i<this.height;i++)for(var s=0;s<this.width;s++){var r=t.data[e];this.tiles[e++]=r}this.bakeImage()},hasEntities:function(){return!0},copyFrom:function(t){this.width=t.width,this.height=t.height,this.tiles=t.tiles,this.spawners=t.spawners,this.image=t.image}}),Chunk.prototype.compile(),t.Chunk=Chunk,Tile=base.extend(Object,"Tile",{constructor:function(t,e){this.id=t,this.image=e},getBox:function(t,e){return new i.Rect(t,e,1,1)},isSolid:function(){return!0}}),t.Tile=Tile,t.PassableTile=base.extend(Tile,"PassableTile",{constructor:function(t,e){this.constructor$Tile(t,e)},getBox:function(t,e){return null},isSolid:function(){return!1}})});