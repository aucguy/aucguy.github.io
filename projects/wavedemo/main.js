base.registerModule("main",function(t){function e(){o=document.getElementById(s),h.instance=new h("#F8F8F8"),requestAnimationFrame(i),document.getElementById("sync-settings").addEventListener("click",external(function(){n(h.instance,new Settings)})),window.addEventListener("blur",external(function(){c=!0})),window.addEventListener("focus",external(function(){c=!1})),n(h.instance,new Settings)}function n(t,e){t.sprites=[];var n=25,i=o.width-n,s=(i-n)/(e.nodeCount+2),r=o.height/2,c=n,u=new d,h=new d;t.addSprite(h),t.addSprite(u);var a=[],m=new p(util.Vector.get(c,r),e.amplitude,e.frequency);a.push(m),u.addSprite(m),c+=s;for(var v=0;v<e.nodeCount;v++)m=new l(util.Vector.get(c,r),e.friction/100),a.push(m),u.addSprite(m),c+=s;m=new f(util.Vector.get(c,r)),a.push(m),u.addSprite(m);for(var v=0;v<e.nodeCount+1;v++){var y=new g(a[v],a[v+1],e.tension);h.addSprite(y),y.bind()}}function i(){if(c)t=0;else{var t=r;if(r=(new Date).getTime()/1e3,0!=t){var e=r-t;h.instance.update(Math.min(e,.01))}}h.instance.render(o.getContext("2d")),requestAnimationFrame(i)}var o,s="display",r=0,c=!1,u=extend(Object,"Sprite",{constructor:function(t){this.position=util.Vector.get(),this.graphic=t,this.parent=null},update:function(t){},render:function(t){t.drawImage(this.graphic,this.position.x,this.position.y)},onAdded:function(t){if(null!=this.parent)throw new Error("Sprite added to a group when it was already in one");this.parent=t},onRemoved:function(t){if(this.parent!=t)throw new Error("Sprite removed from a group it wasn't in");this.parent=null}}),d=extend(u,"Group",{constructor:function(){this.constructor$Sprite(),this.sprites=[]},update:function(t){for(var e=0;e<this.sprites.length;e++)this.sprites[e].update(t)},render:function(t){for(var e=0;e<this.sprites.length;e++)this.sprites[e].render(t)},addSprite:function(t){this.sprites.push(t),t.onAdded(this)},removeSprite:function(t){this.sprites.splice(this.sprites.indexOf(t),1),t.onRemoved(this)}}),h=extend(d,"World",{constructor:function(t){this.constructor$Group(),this.backgroundColor=t},render:function(t){t.fillStyle=this.backgroundColor,t.fillRect(0,0,t.canvas.width,t.canvas.height),this.render$Group(t)}}),a=extend(u,"Node",{constructor:function(t){this.constructor$Sprite(),this.position=t,this.velocity=util.Vector.get(0,0),this.connections=[]},update:function(t){this.update$Sprite(t),this.velocity.increment(this.getAcceleration());var e=this.velocity.copy();e.m*=t,this.position.increment(e)},render:function(t){t.fillStyle="#000000",t.fillRect(this.position.x,this.position.y,10,10)},getAcceleration:function(){throw new Error("Abstract Method")}}),l=extend(a,"PhysicalNode",{constructor:function(t,e){this.constructor$Node(t),this.mass=1,this.friction=e},getAcceleration:function(){for(var t=util.Vector.get(0,0),e=0;e<this.connections.length;e++)t.increment(this.connections[e].getForce(this));return t.m/=this.mass,t},update:function(t){this.update$Node(t),this.velocity.m-=this.friction}}),p=extend(a,"MovingNode",{constructor:function(t,e,n){this.constructor$Node(t),this.amplitude=e,this.frequency=n,this.time=0},getAcceleration:function(){return util.Vector.get(0,0)},update:function(t){this.update$Node(t),this.time+=t,this.position.y=Math.floor(Math.sin(this.time*this.frequency/25)*this.amplitude)+o.height/2}}),f=extend(a,"StaticNode",{constructor:function(t){this.constructor$Node(t)},getAcceleration:function(){return util.Vector.get(0,0)}}),g=extend(u,"Connection",{constructor:function(t,e,n){this.nodeA=t,this.nodeB=e,this.strength=n,this.force=null},bind:function(){this.give(this.nodeA),this.give(this.nodeB)},give:function(t){-1==t.connections.indexOf(this)&&t.connections.push(this)},getForce:function(t){return t==this.nodeA?this.force:t==this.nodeB?this.force.opposite():null},render:function(t){t.strokeStyle="#FF0000",t.beginPath(),t.moveTo(this.nodeA.position.x+5,this.nodeA.position.y+5),t.lineTo(this.nodeB.position.x+5,this.nodeB.position.y+5),t.stroke()},update:function(t){this.force=this.nodeB.position.sub(this.nodeA.position),this.force.m*=this.strength*t}});Settings=extend(Object,"Settings",{constructor:function(){this.nodeCount=safeParseInt(document.getElementById("nodeCount").value),this.frequency=safeParseInt(document.getElementById("frequency").value),this.amplitude=safeParseInt(document.getElementById("amplitude").value),this.tension=document.getElementById("tension").value,this.friction=document.getElementById("friction").value}}),h.instance=null,e()});